/**
 * Copyright 2014 by Andre Beckus
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at

 *   http://www.apache.org/licenses/LICENSE-2.0

 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

package com.abcodeworks.webshortcututil.read;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;

import android.test.AndroidTestCase;
import android.test.suitebuilder.annotation.SmallTest;

import com.abcodeworks.webshortcututil.read.ShortcutReadException;
import com.abcodeworks.webshortcututil.read.ShortcutReader;
import com.abcodeworks.webshortcututil.read.UrlShortcutReader;
import static com.abcodeworks.webshortcututil.ShortcutTestHelper.testReadShortcut;
import static com.abcodeworks.webshortcututil.ShortcutTestHelper.getTestStream;

public class UrlShortcutReaderTest extends AndroidTestCase
{
    ShortcutReader reader = null;
    
    final String
        CHROME_PATH =   "samples" + File.separator + "real" + File.separator + "url" + File.separator + "Chrome",
        FIREFOX_PATH =  "samples" + File.separator + "real" + File.separator + "url" + File.separator + "Firefox",
        IE_PATH =       "samples" + File.separator + "real" + File.separator + "url" + File.separator + "IE",
        FAKE_PATH =     "samples" + File.separator + "fake" + File.separator + "url";

    public void setUp() throws Exception {
        reader = new UrlShortcutReader();
    }
    
    @SmallTest
    public void testReadUrlString()
                  throws FileNotFoundException,
                         ShortcutReadException,
                         IOException
    {
        // Shortcuts generated by Chrome
        testReadShortcut(reader, CHROME_PATH, "Google.url", "Google", "https://www.google.com/");
        testReadShortcut(reader, CHROME_PATH, "Myspace - Social Entertainment.url", "Myspace - Social Entertainment", "http://www.myspace.com/");
        testReadShortcut(reader, CHROME_PATH, "Yahoo!.url", "Yahoo!", "http://www.yahoo.com/");
        
        // Shortcuts generated by Firefox
        testReadShortcut(reader, FIREFOX_PATH,  "Google.URL", "Google", "https://www.google.com/");
        testReadShortcut(reader, FIREFOX_PATH,  "Myspace Social Entertainment.URL", "Myspace Social Entertainment", "http://www.myspace.com/");
        testReadShortcut(reader, FIREFOX_PATH,  "Yahoo!.URL", "Yahoo!", "http://www.yahoo.com/");
        
        // Shortcuts generated by Internet Explorer
        testReadShortcut(reader, IE_PATH, "cn.yahoo.com.url", "cn.yahoo.com", "http://cn.yahoo.com/");
        testReadShortcut(reader, IE_PATH, "Google.url", "Google", "https://www.google.com/");
        testReadShortcut(reader, IE_PATH, "Myspace  Social Entertainment.url", "Myspace  Social Entertainment", "http://www.myspace.com/");
        testReadShortcut(reader, IE_PATH, "Yahoo!.url", "Yahoo!", "http://www.yahoo.com/");
        
        //Hypothetical/Fake Tests
        testReadShortcut(reader, FAKE_PATH, "LotsOfWhitespace.url", "LotsOfWhitespace", "https://www.google.com/");
        testReadShortcut(reader, FAKE_PATH, "GarbledEntry.url", "GarbledEntry", "https://www.google.com/");

        try {
            InputStream instream = getClass().getResource(File.separator + FAKE_PATH + File.separator + "HeaderOnly.url").openStream();
            reader.readUrlString(instream);
            fail("Did not get ShortcutReadException");
        } catch(ShortcutReadException e) {
            assertEquals("URL not found in file", e.getMessage());
        }
    }
}
