/**
 * Copyright 2014 by Andre Beckus
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at

 *   http://www.apache.org/licenses/LICENSE-2.0

 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

package com.abcodeworks.webshortcututil.read;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import org.junit.*;
import org.junit.rules.ExpectedException;

import com.abcodeworks.webshortcututil.read.DesktopShortcutReader;
import com.abcodeworks.webshortcututil.read.ShortcutReadException;
import com.abcodeworks.webshortcututil.read.ShortcutReader;

import static com.abcodeworks.webshortcututil.ShortcutTestHelper.testReadShortcut;
import static com.abcodeworks.webshortcututil.ShortcutTestHelper.getTestStream;

public class DesktopShortcutReaderTest
{
    ShortcutReader reader = null;
    
    final String
        GNOME_PATH = "samples" + File.separator + "real" + File.separator + "desktop" + File.separator + "gnome",
        GNOME_PATH_RENAMED = GNOME_PATH + File.separator + "renamed/",
        KDE_PATH = "samples" + File.separator + "real" + File.separator + "desktop" + File.separator + "kde",
        FAKE_PATH = "samples" + File.separator + "fake" + File.separator + "desktop";

    @Rule
    public ExpectedException thrown= ExpectedException.none();
      
    @Before
    public void setUp() throws Exception {
        reader = new DesktopShortcutReader();
    }

    @Test
    public void testReadUrlString()
                  throws FileNotFoundException,
                         ShortcutReadException,
                         IOException
    {
        // Shortcuts generated by Gnome
        testReadShortcut(reader, GNOME_PATH, "Google.desktop", "Google", "https://www.google.com/");
        testReadShortcut(reader, GNOME_PATH, "Yahoo!.desktop", "Yahoo!", "http://www.yahoo.com/");
        testReadShortcut(reader, GNOME_PATH_RENAMED,  "Link to Google - renamed.desktop", "Link to Google - renamed", "https://www.google.com/");
        
        // Shortcuts generated by KDE
        testReadShortcut(reader, KDE_PATH, "http___japan.zdnet.com_.desktop", "http___japan.zdnet.com_", "http://japan.zdnet.com/");
        testReadShortcut(reader, KDE_PATH, "https___www.google.com_.desktop", "https___www.google.com_", "https://www.google.com/");
        testReadShortcut(reader, KDE_PATH, "http___www.microsoft.com_sv-se_default.aspx.desktop", "http___www.microsoft.com_sv-se_default.aspx", "http://www.microsoft.com/sv-se/default.aspx");
        testReadShortcut(reader, KDE_PATH, "http___www.myspace.com_.desktop", "http___www.myspace.com_", "http://www.myspace.com/");
        testReadShortcut(reader, KDE_PATH, "http___www.yahoo.com_.desktop", "http___www.yahoo.com_", "http://www.yahoo.com/");
        testReadShortcut(reader, KDE_PATH, "http___cn.yahoo.com_.desktop", "http___cn.yahoo.com_", "http://cn.yahoo.com/");
        testReadShortcut(reader, KDE_PATH, "http___xn--fet810g.xn--fiqs8s_.desktop", "http___xn--fet810g.xn--fiqs8s_", "http://xn--fet810g.xn--fiqs8s/");
        testReadShortcut(reader, KDE_PATH, "http___www.baidu.com_.desktop", "http___www.baidu.com_", "http://www.baidu.com/");
        
        // Fake shortcuts
        testReadShortcut(reader, FAKE_PATH, "CommentsAndBlankLines.desktop", "CommentsAndBlankLines", "https://www.google.com/");
        testReadShortcut(reader, FAKE_PATH, "GarbledEntry.desktop", "GarbledEntry", "https://www.google.com/");
        testReadShortcut(reader, FAKE_PATH, "LotsOfWhitespace.desktop", "LotsOfWhitespace", "https://www.google.com/");
    }
    
    @Test
    public void testReadUrlStringNonAscii()
                  throws FileNotFoundException,
                         ShortcutReadException,
                         IOException
    {
        // Shortcuts generated by Gnome
        testReadShortcut(reader, GNOME_PATH, "CIOとITマネージャーの課題を解決するオンラインメディア - ZDNet Japan.desktop", "CIOとITマネージャーの課題を解決するオンラインメディア - ZDNet Japan", "http://japan.zdnet.com/");
        testReadShortcut(reader, GNOME_PATH, "Myspace | Social Entertainment.desktop", "Myspace | Social Entertainment", "http://www.myspace.com/");
        testReadShortcut(reader, GNOME_PATH, "Microsoft Sverige | Enheter och tjänster.desktop", "Microsoft Sverige | Enheter och tjänster", "http://www.microsoft.com/sv-se/default.aspx");
        testReadShortcut(reader, GNOME_PATH, "sverige - Sök på Google.desktop", "sverige - Sök på Google", "http://www.google.se/#sclient=tablet-gws&hl=sv&tbo=d&q=sverige&oq=sveri&gs_l=tablet-gws.1.1.0l3.13058.15637.28.17682.5.2.2.1.1.0.143.243.0j2.2.0...0.0...1ac.1.xX8iu4i9hYM&pbx=1&fp=1&bpcl=40096503&biw=1280&bih=800&bav=on.2,or.r_gc.r_pw.r_qf.&cad=b");
        testReadShortcut(reader, GNOME_PATH, "www.ÖÐ¹úÕþ¸®.ÕþÎñ.cn.desktop", "www.ÖÐ¹úÕþ¸®.ÕþÎñ.cn", "http://www.中国政府.政务.cn/");
        testReadShortcut(reader, GNOME_PATH, "中国雅虎首页.desktop", "中国雅虎首页", "http://cn.yahoo.com/");
        testReadShortcut(reader, GNOME_PATH, "导航.中国.desktop", "导航.中国", "http://导航.中国/");
        testReadShortcut(reader, GNOME_PATH, "百度一下，你就知道.desktop", "百度一下，你就知道", "http://www.baidu.com/");
        
        // Shortcuts generated by KDE
        testReadShortcut(reader, KDE_PATH, "http___www.中国政府.政务.cn_.desktop", "http___www.中国政府.政务.cn_", "http://www.xn--fiqs8sirgfmh.xn--zfr164b.cn/");
    }
    
    @Test
    public void testReadEmpty()
            throws FileNotFoundException,
                   ShortcutReadException,
                   IOException {
        thrown.expect(ShortcutReadException.class);
        thrown.expectMessage("Desktop Entry group not found in desktop file");
        reader.readUrlString(getTestStream(FAKE_PATH, "Empty.desktop"));
    }
    
    @Test
    public void testReadGarbledHeader()
            throws FileNotFoundException,
                   ShortcutReadException,
                   IOException {
        thrown.expect(ShortcutReadException.class);
        thrown.expectMessage("Shortcut file is invalid");
        reader.readUrlString(getTestStream(FAKE_PATH, "GarbledHeader.desktop"));
    }
    
    @Test
    public void testReadHeaderOnly()
            throws FileNotFoundException,
                   ShortcutReadException,
                   IOException {
        thrown.expect(ShortcutReadException.class);
        thrown.expectMessage("URL not found in file");
        reader.readUrlString(getTestStream(FAKE_PATH, "HeaderOnly.desktop"));
    }
    
    @Test
    public void testReadApplicationType()
            throws FileNotFoundException,
                   ShortcutReadException,
                   IOException {
        thrown.expect(ShortcutReadException.class);
        thrown.expectMessage("URL not found in file");
        reader.readUrlString(getTestStream(FAKE_PATH, "ApplicationType.desktop"));
    }
}
